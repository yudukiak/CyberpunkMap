import type { Route } from "./+types/team";
import type { loaderData } from "types/map";
import {
  connectDb,
  fetchRulebookPins,
  fetchTeamPins,
} from "~/utilities/pinLoader";
import Error from "~/views/Error";
import Common from "./Common";

export function meta({ data }: Route.MetaArgs) {
  const title = [data.title, "Cyberpunk RED Map"].filter(Boolean).join(" - ");
  return [
    { title },
  ];
}

export async function loader({ params }: Route.LoaderArgs) {
  // „Éë„É©„É°„Éº„Çø„ÇíÂèñÂæó
  const { teamId } = params;
  // DBÊé•Á∂ö
  const db = await connectDb();
  // ËøîÂç¥„Éá„Éº„Çø
  let pins = [];
  let title = "";
  try {
    // rulebook„ÅÆmapÊÉÖÂ†±„ÇíÂèñÂæó
    const rulebookMap = await fetchRulebookPins(db);
    pins.push({ name: "„É´„Éº„É´„Éñ„ÉÉ„ÇØ", pins: rulebookMap });
    // teamId„ÅÆmapÊÉÖÂ†±„ÇíÂèñÂæó
    if (teamId) {
      const teamMap = await fetchTeamPins(db, teamId);
      if (teamMap) {
        title = teamMap.name;
        pins.push({ name: teamMap.name, pins: teamMap.pins });
      }
    }
    // „Éá„Éº„ÇøËøîÂç¥
    return { pins, title, error: null };
  } catch (error) {
    console.error("üî•", error);
    return { pins: null, title: null, error: "„Éá„Éº„Çø„Éô„Éº„ÇπÊé•Á∂ö„Å´Â§±Êïó„Åó„Åæ„Åó„Åü" };
  } finally {
    await db.end().catch((e) => console.error("‚ö†Ô∏è", e));
  }
}

export default function Index({ loaderData }: loaderData) {
  const { pins, error } = loaderData;
  if (error) return <ErrorBoundary />;
  return (
    <main className="h-dvh w-dvw">
      <Common pins={pins} />
    </main>
  );
}

export function ErrorBoundary() {
  return <Error />;
}
